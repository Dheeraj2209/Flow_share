name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Ensure API base URL is configured
        run: |
          if [ -z "${{ vars.NEXT_PUBLIC_API_BASE_URL }}" ] && [ -z "${{ secrets.NEXT_PUBLIC_API_BASE_URL }}" ]; then
            echo "NEXT_PUBLIC_API_BASE_URL is not set as a Repository Variable or Secret." >&2
            echo "Set it in Settings → Secrets and variables → Actions → Variables (preferred) or Secrets." >&2
            exit 1
          else
            echo "NEXT_PUBLIC_API_BASE_URL is set."
          fi

      - name: Install dependencies
        run: npm ci

      - name: Hide server routes for static export
        run: |
          if [ -d src/app/api ]; then mv src/app/api src/app/_api_server; fi

      - name: Build static site (Next.js export)
        env:
          NEXT_TELEMETRY_DISABLED: 1
          # Set this repository variable to your backend API base URL, e.g. https://flowshare.yourdomain.com
          NEXT_PUBLIC_API_BASE_URL: ${{ vars.NEXT_PUBLIC_API_BASE_URL || secrets.NEXT_PUBLIC_API_BASE_URL }}
          STATIC_EXPORT: 1
          # Project site base path (adjust if repo name changes)
          BASE_PATH: /Flow_share
          ASSET_PREFIX: /Flow_share/
        run: |
          echo "Using API base: $NEXT_PUBLIC_API_BASE_URL"
          echo "Building with BASE_PATH=$BASE_PATH and ASSET_PREFIX=$ASSET_PREFIX"
          npm run build

      - name: Ensure Next assets are present in out
        run: |
          mkdir -p out/_next/static
          if [ -d .next/static ]; then rsync -a .next/static/ out/_next/static/; fi
          if [ -d public ]; then rsync -a public/ out/; fi
          if [ -f src/app/favicon.ico ]; then cp -f src/app/favicon.ico out/favicon.ico; fi

      - name: List exported files (debug)
        run: |
          echo "Top-level out/ files:" && ls -la out | sed -n '1,200p'
          echo "Sample of out/_next/static:" && find out/_next/static -type f | head -n 100 || true

      - name: Add .nojekyll for GitHub Pages
        run: |
          mkdir -p out
          touch out/.nojekyll

      - name: Restore server routes (cleanup)
        if: always()
        run: |
          if [ -d src/app/_api_server ]; then mv src/app/_api_server src/app/api; fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
